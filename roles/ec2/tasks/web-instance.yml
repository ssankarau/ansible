- name: Web Instance on Private Subnet 1
  amazon.aws.ec2_instance:
    name: "{{ deploy_environment }}-Web-Instance-1"
    key_name: "{{ deploy_environment }}-private-key"
    vpc_subnet_id: "{{ web_subnet_1.subnet.id }}"
    instance_type: "{{ web_instance_type }}"
    security_group: "{{ web_sg.group_id }}"
    image_id: "{{ vars['app_ami_' ~ region_with_underscore] }}"
    region: "{{ region }}"
    state: running
    tags:
      Name: "{{ deploy_environment }}-Web-Instance-1"
      Group: WebTier
      environ: "{{ deploy_environment }}"
      controlled_by: ansible
    # user_data: "{{ lookup('file', 'web_user_data.sh') }}"
  register: web_instance_1

- name: Web Instance on Private Subnet 2
  amazon.aws.ec2_instance:
    name: "{{ deploy_environment }}-Web-Instance-2"
    key_name: "{{ deploy_environment }}-private-key"
    vpc_subnet_id: "{{ web_subnet_2.subnet.id }}"
    instance_type: "{{ web_instance_type }}"
    security_group: "{{ web_sg.group_id }}"
    image_id: "{{ vars['app_ami_' ~ region_with_underscore] }}"
    region: "{{ region }}"
    state: running
    tags:
      Name: "{{ deploy_environment }}-Web-Instance-2"
      Group: WebTier
      environ: "{{ deploy_environment }}"
      controlled_by: ansible
    # user_data: "{{ lookup('file', 'web_user_data.sh') }}"
  register: web_instance_2

- name: Add the Web Server EC2 instance to Dynamic Inventory
  lineinfile: 
    path: "inventory/{{ deploy_environment }}-dynamic-inventory"
    insertafter: '^\[web_servers\]' 
    line: "{{ web_instance_1.instances[0].private_ip_address}}"

- name: Add the Bastion EC2 instance to Dynamic Inventory
  lineinfile: 
    path: "inventory/{{ deploy_environment }}-dynamic-inventory"
    insertafter: '^\[web_servers\]' 
    line: "{{ web_instance_2.instances[0].private_ip_address}}"

# '-o StrictHostKeyChecking=no'